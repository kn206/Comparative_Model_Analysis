cc_fraud_trainingset <- read_csv("~/ADA_Assignemnt2/cc_fraud_trainingset.csv")
#Loading the data into R
library(readr)
cc_fraud_trainingset <- read_csv("~/ADA_Assignemnt2/cc_fraud_trainingset.csv")
cc_fraud_testset <- read_csv("~/ADA_Assignemnt2/cc_fraud_testset.csv")
library(mice)
#Checking missing values in the data
md.pattern(cc_fraud_trainingset)
imputed_data <-mice(data =cc_fraud_trainingset , m = 5, method = "mean", maxit=10)
##Extract imputed Data
cc_fraud_trainingsetImputed <-complete(imputed_data, 2)
md.pattern(cc_fraud_trainingsetImputed )
imputed_data2 <-mice(data =cc_fraud_testset, m = 5, method = "mean", maxit=10)
##Extract imputed Data
cc_fraud_testsetImputed <-complete(imputed_data2, 2)
train<-cc_fraud_trainingsetImputed
test<-cc_fraud_testsetImputed
#to test distribution of classes in both training and testing datasets
prop.table(table(train)) * 100
#to test distribution of classes in both training and testing datasets
prop.table(table(train)) * 100
##Training the Model
caret_glm_mod = train(
form =  cc_fraud_trainingsetImputed~ .,
data = train,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
)
##Training the Model
library(caret)
caret_glm_mod = train(
form =  cc_fraud_trainingsetImputed ~ .,
data = train,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
)
cc_fraud_trainingsetImputed <- as.vector(cc_fraud_trainingsetImputed)
caret_glm_mod = train(
form =  cc_fraud_trainingsetImputed ~ .,
data = train,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
)
caret_glm_mod = train(
data = train,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
)
caret_glm_mod = train(
data = train,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
caret_glm_mod = train(
caret_glm_mod = train(
data = train,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
)
caret_glm_mod <- train(
form = Class ~ .,
data = train,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
)
library(caret)
library(dplyr)
library(tidyr)
library(caret)
library(caret)
library(dplyr)
library(tidyr)
# Train the linear model using the training dataset
linear_mod <- lm(train ~ ., data = train_data)
# Train the linear model using the training dataset
linear_mod <- lm(train ~ ., data = train)
train_data<-cc_fraud_trainingsetImputed
test_data<-cc_fraud_testsetImputed
# Train the linear model using the training dataset
linear_mod <- lm(train ~ ., data = train_data)
# Train the linear model using the training dataset
linear_mod <- lm(train ~ ., data = train_data)
# Train the linear model using the training dataset
linear_mod <- lm(train_data ~ ., data = train_data)
class(train_data)
train_data <- as.data.frame(train_data)
class(train_data)
# Train the linear model using the training dataset
linear_mod <- lm(train_data ~ ., data = train_data)
train_data <- as.data.frame(train_data)
# Train the linear model using the training dataset
linear_mod <- lm(train_data ~ ., data = train_data)
model <- lm(train_data$target_variable ~ ., data = train_data)
library(randomForest)
install.packages("randomForest")
library(randomForest)
Boston.rf=randomForest(medv ~ . , data = train)
Boston.rf=randomForest(train_data ~ . , data = train)
data_cc<-rbind(train_data,test_data)
Boston.rf=randomForest(data_cc ~ . , data = train)
Boston.rf=randomForest(data_cc~ . , data = train)
Boston.rf
Boston.rf=randomForest(data_cc~ . , data = train_data)
caret_glm_mod = train(
form = data_cc ~ .,
data = train_data,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
)
##################
#random sampling
indexes<-sample(1:nrow(data_cc), 4/5*nrow(data_cc))
train<-data_cc[indexes,]
test<-data_cc[-indexes,]
Boston.rf=randomForest(data_cc~ . , data = train)
#################
caret_glm_mod = train(
form = data_cc ~ .,
data = train,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
)
train <- na.omit(train)
train <- na.omit(train)
caret_glm_mod <- train(
formula = data_cc ~ .,
data = train,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
)
caret_glm_mod = train(
form = response_var ~ predictor_var1 + predictor_var2 + ...,
data = train,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
)
caret_glm_mod = train(
form = response_var ~ predictor_var1 + predictor_var2 + ...,
data = train,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
)
caret_glm_mod = train(
form = response_var ~ predictor_var1 + predictor_var2 + ...,
data = train,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
)
caret_glm_mod = train(
form = data_cc ~ .,
data = train,
trControl = trainControl(method = "cv", number = 5),
method = "glm",
family = "binomial"
)
